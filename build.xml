<?xml version="1.0"?>
<project name="Toopher" default="jar"
  xmlns:ivy="antlib:org.apache.ivy.ant">

  <!---->
  <property name="ivy.install.version" value="2.1.0-rc2" />
  <condition property="ivy.home" value="${env.IVY_HOME}">
    <isset property="env.IVY_HOME" />
  </condition>
  <property name="ivy.home" value="${user.home}/.ant" />
  <property name="ivy.jar.dir" value="${ivy.home}/lib" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

  <target name="download-ivy" unless="offline">
    <mkdir dir="${ivy.jar.dir}"/>
    <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
        dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>

  <target name="init-ivy" depends="download-ivy">
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
        uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>

  <!-- Project-specific configuration -->
  <property name="main.class" value="com.toopher.ToopherAPIDemo"/>
  <property name="base.name" value="toopher-1.1.0"/>

  <!-- Standard Directory Layout -->
  <property name="src.dir" value="src/main/java"/>
  <property name="test.dir" value="src/test/java"/>
  <property name="build.dir" value="build"/>
  <property name="dist.dir" value="dist"/>

  <!-- Targets -->
  <target name="resolve" description="Retrieve dependencies with Ivy.">
    <ivy:resolve log="download-only"/>
    <ivy:cachepath conf="build" pathid="build.classpath"/>
    <ivy:cachepath conf="default" pathid="runtime.classpath"/>
    <ivy:cachefileset conf="default" setid="runtime.fileset"/>
    <ivy:cachepath conf="test" pathid="test.classpath"/>
  </target>

  <target name="compile" depends="resolve" description="Compile all sources.">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${build.dir}/classes"/>
    <javac srcdir="${src.dir}" destdir="${build.dir}/classes"
           optimize="on" debug="on" deprecation="on" includeantruntime="no">
      <compilerarg value="-Xlint"/>
      <classpath refid="build.classpath"/>
    </javac>
    <copy todir="${build.dir}/classes">
      <fileset dir="${src.dir}" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="jar" depends="compile"
          description="Generate the jarfile distributable.">
    <jar destfile="${dist.dir}/${base.name}.jar"
         basedir="${build.dir}/classes">
      <manifest>
        <attribute name="Main-Class" value="${main.class}"/>
      </manifest>
    </jar>
    <jar destfile="${dist.dir}/${base.name}-all.jar"
         basedir="${build.dir}/classes">
      <zipgroupfileset refid="runtime.fileset"/>
      <manifest>
        <attribute name="Main-Class" value="${main.class}"/>
      </manifest>
    </jar>
  </target>

  <target name="clean" description="Delete all generated files.">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

  <target name="test-compile" depends="compile">
    <mkdir dir="${build.dir}/test"/>
    <javac srcdir="${test.dir}" destdir="${build.dir}/test"
           optimize="on" debug="on" deprecation="on"
           classpath="${build.dir}/classes" includeantruntime="no">
      <compilerarg value="-Xlint"/>
      <classpath refid="build.classpath"/>
      <classpath refid="test.classpath"/>
    </javac>
    <copy todir="${build.dir}/test">
      <fileset dir="${test.dir}" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="test" depends="test-compile" description="Run the unit tests.">
    <junit fork="yes">
      <classpath>
        <pathelement path="${build.dir}/instrumented"/>
        <pathelement path="${build.dir}/classes"/>
        <pathelement path="${build.dir}/test"/>
        <path refid="test.classpath"/>
      </classpath>
      <batchtest>
        <formatter type="brief" usefile="false"/>
        <fileset dir="${build.dir}/test"/>
      </batchtest>
    </junit>
  </target>
</project>
